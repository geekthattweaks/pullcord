package util

import (
	"github.com/fitstar/falcore"
	"net/http"
	"testing"
	"github.com/stretchr/testify/assert"
)

// TestLandingPage verifies that a Falcore RequestFilter generated by
// NewLandingFilter responds appropriately to a request. Specifically, this test
// verifies that no error occurs in the response.
func TestLandingPage(t *testing.T) {
	request, err := http.NewRequest("GET", "/", nil)
	assert.NoError(t, err)
	_, response := falcore.TestWithRequest(request, &LandingFilter{}, nil)
	assert.Equal(t, 200, response.StatusCode)
}

// TestAnotherLandingPage verifies that a Falcore RequestFilter generated by
// NewLandingFilter responds appropriately to a request for an unexpected URI.
// Specifically, this test verifies that no error occurs in the response.
func TestAnotherLandingPage(t *testing.T) {
	request, err := http.NewRequest(
		"GET",
		"/other/page/somewhere/else.php",
		nil,
	)
	assert.NoError(t, err)
	_, response := falcore.TestWithRequest(request, &LandingFilter{}, nil)
	assert.Equal(t, 200, response.StatusCode)
}

// TestPostLandingPage verifies that a Falcore RequestFilter generated by
// NewLandingFilter responds appropriately to a POST request. Specifically, this
// test verifies that no error occurs in the response.
func TestPostLandingPage(t *testing.T) {
	request, err := http.NewRequest("POST", "/", nil)
	assert.NoError(t, err)
	_, response := falcore.TestWithRequest(request, &LandingFilter{}, nil)
	assert.Equal(t, 200, response.StatusCode)
}

