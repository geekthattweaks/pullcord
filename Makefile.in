changequote(`[',`]')dnl`
ROOTPKG = github.com/stuphlabs/pullcord
CONTAINERNAME = pullcord

PKG = ./...
COVERMODE = set

ifdef([_USE_DOCKER_], [
DOCKER := _DOCKER_CMD_
])
ifdef([_USE_DOCKER_GO_],[
GO := ${DOCKER} \
	run -it --rm \
	-v $${PWD}/.build_gopath/:/go/ \
	-v $${PWD}/:/go/src/${ROOTPKG}/ \
	-w /go/src/${ROOTPKG}/ \
	-u `id -u` \
	_DOCKER_GOLANG_IMG_ \
	_GO_CMD_
],[
GO := cd .build_gopath/src/${ROOTPKG} \
	&& GOPATH=$${PWD}/.build_gopath _GO_CMD_
])

binfiles = bin/pullcord bin/genhash
cleanfiles = bin cover.html cover.out ${binfiles}
recursive_cleanfiles =
dist_cleanfiles = Makefile .build_gopath
recursive_dist_cleanfiles =
maintainer_cleanfiles =
recursive_maintainer_cleanfiles =

.PHONY: all
all: test ${binfiles}

bin/%: cmd/%/*.go .build_gopath/src
	mkdir -p bin
	${GO} build -v -o $@ ./cmd/$*

.build_gopath/src:
	mkdir -p $@/`dirname ${ROOTPKG}`
	ifdef([_USE_DOCKER_GO_],,[ln -s $${PWD} $@/${ROOTPKG}])
	${GO} get -t -v ${PKG}

.PHONY: clean
clean:
	-rm -rf ${cleanfiles}
	-rm -f `for file in ${recursive_cleanfiles}; do \
		find . -name $${file}; \
	done`

ifdef([_USE_DOCKER_],[
container: test Dockerfile ${binfiles}
	${DOCKER} build -t ${CONTAINERNAME} .
])

cover.html: cover.out
	${GO} tool cover -html cover.out -o $@

cover.out: *.go */*.go .build_gopath/src
	${GO} test -v -coverprofile $@ -covermode ${COVERMODE} ${PKG}

.PHONY: distclean
distclean: clean
	-rm -rf ${dist_cleanfiles}
	-rm -f `for file in ${recursive_dist_cleanfiles}; do \
		find . -name $${file}; \
	done`

.PHONY: maintainer_clean
maintainer_clean: clean distclean
	-rm -rf ${maintainer_cleanfiles}
	-rm -f `for file in ${recursive_maintainer_cleanfiles}; do \
		find . -name $${file}; \
	done`

.PHONY: test
test: cover.out cover.html

